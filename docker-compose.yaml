version: '3.8'

services:
  control:
    build:
      context: ./src/control
      dockerfile: Dockerfile
    container_name: control_service
    network_mode: "host"  # 호스트 네트워크 사용
    volumes:
      - ./src/control:/app  # 로컬 파일과 컨테이너 파일 매핑
    environment:
      - ENV_VAR_NAME=value  # 필요한 환경 변수 추가 (예시)

  face_detect:
    build:
      context: ./src/face_detect
      dockerfile: Dockerfile
    container_name: face_detect_service
    runtime: nvidia  # GPU 사용
    environment:
      - NVIDIA_VISIBLE_DEVICES=0  # GPU 0 사용 (첫 번째 GPU)
    devices:
      - "/dev/video0:/dev/video0"  # 웹캠 장치 매핑
    network_mode: "host"  # 호스트 네트워크 사용
    # ports:
    #   - "5000:5000"  # 호스트의 5000 포트를 컨테이너의 5000 포트와 매핑

  gui:
    build:
      context: ./src/gui
      dockerfile: Dockerfile
    container_name: gui_service
    network_mode: "host"  # 호스트 네트워크 사용
    volumes:
      - ./src/gui:/app  # 로컬 파일과 컨테이너 파일 매핑
    environment:
      - ENV_VAR_NAME=value  # 필요한 환경 변수 추가 (예시)
    # ports:
    #   - "3001:3001"  # 호스트의 3001 포트를 컨테이너의 3001 포트와 매핑

  db:
    build:
      context: ./src/db
      dockerfile: Dockerfile
    container_name: db_service
    network_mode: "host"  # 호스트 네트워크 사용
    volumes:
      - ./src/db:/app  # 로컬 파일과 컨테이너 파일 매핑
    environment:
      - FLASK_ENV=development
    # ports:
    #   - "8000:8000"  # 호스트의 8000 포트를 컨테이너의 8000 포트와 매핑
